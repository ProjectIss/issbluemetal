@model issBlueMetal.Models.Customer

@{
    ViewBag.Title = "Edit";
}


<div class="breadcrumbs-inline pt-3 pb-1" id="breadcrumbs-wrapper">
    <div class="container">
        <div class="row">
            <div class="col s10 m6 l6 breadcrumbs-left">
                <h5 class="breadcrumbs-title mt-0 mb-0 display-inline hide-on-small-and-down"><span>Customer Edit</span></h5>

                <ol class="breadcrumbs mb-0">
                    <li class="breadcrumb-item">
                        <a href="~/Customers/Index">Index</a>
                    </li>
                    <li class="breadcrumb-item">
                        <a href="#">Edit</a>
                    </li>

                </ol>
            </div>

        </div>
    </div>
</div>
<div class="row">
    <div class="col s12">
        <div class="card card-tabs">
            <div class="card-content">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="list-icons" style="text-align:right">
                        @Html.ActionLink("Back to List", "Index", null, htmlAttributes: new { @class = "btn btn-primary" })
                    </div>


                    <div class="form-horizontal">

                        <div class="form-group">
                            <label for="icon_prefix3">Customer Name</label>
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control",  } })
                                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label for="icon_prefix3">Address</label>
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control",  } })
                                @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">

                            <label for="icon_prefix3">Cell No</label>
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.cellNo, new { htmlAttributes = new { @class = "form-control", } })
                                @Html.ValidationMessageFor(model => model.cellNo, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            <label for="icon_prefix3">Opening Balance</label>

                            <div class="col-md-10">
                                @Html.EditorFor(model => model.openingBalance, new { htmlAttributes = new { @class = "form-control", } })
                                @Html.ValidationMessageFor(model => model.openingBalance, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Submit" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                }

            </div>
        </div>
    </div>
</div>